-- Branch identity
CREATE TABLE kantor_units (
    branch_id INT  PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    location VARCHAR(255)
);

-- Users
CREATE TABLE users (
    user_id INT  PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('staff', 'admin') NOT NULL
);

-- Customers
CREATE TABLE customers (
    customer_id INT  PRIMARY KEY AUTO_INCREMENT,
    branch_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    nik VARCHAR(20) NOT NULL UNIQUE,
    address TEXT,
    phone_number VARCHAR(30),
    registration_date DATE,
    FOREIGN KEY (branch_id) REFERENCES kantor_units(branch_id)
);

-- Loans
CREATE TABLE loans (
    loan_id INT  PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    branch_id INT NOT NULL,
    amount_plafond DECIMAL(15,2) NOT NULL,
    interest_rate FLOAT,
    loan_date DATE,
    term_months INT,
    status ENUM('active', 'completed', 'defaulted') DEFAULT 'active',
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (branch_id) REFERENCES kantor_units(branch_id)
);

-- Payments
CREATE TABLE payments (
    payment_id INT  PRIMARY KEY AUTO_INCREMENT,
    loan_id INT NOT NULL,
    branch_id INT NOT NULL,
    payment_date DATE,
    amount_paid DECIMAL(15,2),
    due_date DATE,
    is_on_time BOOLEAN,
    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),
    FOREIGN KEY (branch_id) REFERENCES kantor_units(branch_id)
);

-- Sync Logs (Optional)
CREATE TABLE sync_logs (
    log_id INT  PRIMARY KEY AUTO_INCREMENT,
    synced_table VARCHAR(50),
    last_sync_time DATETIME,
    records_synced INT
);

CREATE TABLE employees (
    employee_id INT  PRIMARY KEY AUTO_INCREMENT,
    branch_id INT NOT NULL,
    name VARCHAR(100),
    position VARCHAR(50),
    assigned_customers INT,
    hire_date DATE,
    FOREIGN KEY (branch_id) REFERENCES kantor_units(branch_id));

CREATE TABLE income (
    income_id INT  PRIMARY KEY AUTO_INCREMENT,
    loan_id INT NOT NULL,
    income_amount DECIMAL(15,2),
    recorded_date DATE,
    FOREIGN KEY (loan_id) REFERENCES loans(loan_id)
);
-- Insert dummy into kantor_units
INSERT INTO kantor_units (name, location) VALUES
('Kantor Cabang Jakarta', 'Jl. Merdeka No. 1, Jakarta'),
('Kantor Cabang Bandung', 'Jl. Braga No. 45, Bandung'),
('Kantor Cabang Surabaya', 'Jl. Basuki Rahmat No. 12, Surabaya'),
('Kantor Cabang Medan', 'Jl. Gatot Subroto No. 99, Medan'),
('Kantor Cabang Makassar', 'Jl. Pettarani No. 3, Makassar');




